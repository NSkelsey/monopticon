// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: epoch.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_epoch_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_epoch_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_epoch_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_epoch_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace epoch {
class AddrAssoc;
class AddrAssocDefaultTypeInternal;
extern AddrAssocDefaultTypeInternal _AddrAssoc_default_instance_;
class ArpAssoc;
class ArpAssocDefaultTypeInternal;
extern ArpAssocDefaultTypeInternal _ArpAssoc_default_instance_;
class DeviceComm;
class DeviceCommDefaultTypeInternal;
extern DeviceCommDefaultTypeInternal _DeviceComm_default_instance_;
class EpochStep;
class EpochStepDefaultTypeInternal;
extern EpochStepDefaultTypeInternal _EpochStep_default_instance_;
class L2Summary;
class L2SummaryDefaultTypeInternal;
extern L2SummaryDefaultTypeInternal _L2Summary_default_instance_;
}  // namespace epoch
PROTOBUF_NAMESPACE_OPEN
template<> ::epoch::AddrAssoc* Arena::CreateMaybeMessage<::epoch::AddrAssoc>(Arena*);
template<> ::epoch::ArpAssoc* Arena::CreateMaybeMessage<::epoch::ArpAssoc>(Arena*);
template<> ::epoch::DeviceComm* Arena::CreateMaybeMessage<::epoch::DeviceComm>(Arena*);
template<> ::epoch::EpochStep* Arena::CreateMaybeMessage<::epoch::EpochStep>(Arena*);
template<> ::epoch::L2Summary* Arena::CreateMaybeMessage<::epoch::L2Summary>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace epoch {

// ===================================================================

class L2Summary PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:epoch.L2Summary) */ {
 public:
  inline L2Summary() : L2Summary(nullptr) {};
  virtual ~L2Summary();

  L2Summary(const L2Summary& from);
  L2Summary(L2Summary&& from) noexcept
    : L2Summary() {
    *this = ::std::move(from);
  }

  inline L2Summary& operator=(const L2Summary& from) {
    CopyFrom(from);
    return *this;
  }
  inline L2Summary& operator=(L2Summary&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const L2Summary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const L2Summary* internal_default_instance() {
    return reinterpret_cast<const L2Summary*>(
               &_L2Summary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(L2Summary& a, L2Summary& b) {
    a.Swap(&b);
  }
  inline void Swap(L2Summary* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(L2Summary* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline L2Summary* New() const final {
    return CreateMaybeMessage<L2Summary>(nullptr);
  }

  L2Summary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<L2Summary>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const L2Summary& from);
  void MergeFrom(const L2Summary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(L2Summary* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "epoch.L2Summary";
  }
  protected:
  explicit L2Summary(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMacDstFieldNumber = 1,
    kIpv4FieldNumber = 2,
    kIpv6FieldNumber = 3,
    kArpFieldNumber = 4,
    kUnknownFieldNumber = 5,
  };
  // fixed64 mac_dst = 1;
  void clear_mac_dst();
  ::PROTOBUF_NAMESPACE_ID::uint64 mac_dst() const;
  void set_mac_dst(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mac_dst() const;
  void _internal_set_mac_dst(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 ipv4 = 2;
  void clear_ipv4();
  ::PROTOBUF_NAMESPACE_ID::uint32 ipv4() const;
  void set_ipv4(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ipv4() const;
  void _internal_set_ipv4(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ipv6 = 3;
  void clear_ipv6();
  ::PROTOBUF_NAMESPACE_ID::uint32 ipv6() const;
  void set_ipv6(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ipv6() const;
  void _internal_set_ipv6(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 arp = 4;
  void clear_arp();
  ::PROTOBUF_NAMESPACE_ID::uint32 arp() const;
  void set_arp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_arp() const;
  void _internal_set_arp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 unknown = 5;
  void clear_unknown();
  ::PROTOBUF_NAMESPACE_ID::uint32 unknown() const;
  void set_unknown(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_unknown() const;
  void _internal_set_unknown(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:epoch.L2Summary)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 mac_dst_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ipv4_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ipv6_;
  ::PROTOBUF_NAMESPACE_ID::uint32 arp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 unknown_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_epoch_2eproto;
};
// -------------------------------------------------------------------

class DeviceComm PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:epoch.DeviceComm) */ {
 public:
  inline DeviceComm() : DeviceComm(nullptr) {};
  virtual ~DeviceComm();

  DeviceComm(const DeviceComm& from);
  DeviceComm(DeviceComm&& from) noexcept
    : DeviceComm() {
    *this = ::std::move(from);
  }

  inline DeviceComm& operator=(const DeviceComm& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceComm& operator=(DeviceComm&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const DeviceComm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeviceComm* internal_default_instance() {
    return reinterpret_cast<const DeviceComm*>(
               &_DeviceComm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DeviceComm& a, DeviceComm& b) {
    a.Swap(&b);
  }
  inline void Swap(DeviceComm* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceComm* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeviceComm* New() const final {
    return CreateMaybeMessage<DeviceComm>(nullptr);
  }

  DeviceComm* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeviceComm>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const DeviceComm& from);
  void MergeFrom(const DeviceComm& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeviceComm* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "epoch.DeviceComm";
  }
  protected:
  explicit DeviceComm(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTxSummaryFieldNumber = 2,
    kBcast33FieldNumber = 3,
    kBcastFfFieldNumber = 4,
    kBcast01FieldNumber = 5,
    kBcastXXFieldNumber = 6,
    kMacSrcFieldNumber = 1,
  };
  // repeated .epoch.L2Summary tx_summary = 2;
  int tx_summary_size() const;
  private:
  int _internal_tx_summary_size() const;
  public:
  void clear_tx_summary();
  ::epoch::L2Summary* mutable_tx_summary(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::L2Summary >*
      mutable_tx_summary();
  private:
  const ::epoch::L2Summary& _internal_tx_summary(int index) const;
  ::epoch::L2Summary* _internal_add_tx_summary();
  public:
  const ::epoch::L2Summary& tx_summary(int index) const;
  ::epoch::L2Summary* add_tx_summary();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::L2Summary >&
      tx_summary() const;

  // .epoch.L2Summary bcast_33 = 3;
  bool has_bcast_33() const;
  private:
  bool _internal_has_bcast_33() const;
  public:
  void clear_bcast_33();
  const ::epoch::L2Summary& bcast_33() const;
  ::epoch::L2Summary* release_bcast_33();
  ::epoch::L2Summary* mutable_bcast_33();
  void set_allocated_bcast_33(::epoch::L2Summary* bcast_33);
  private:
  const ::epoch::L2Summary& _internal_bcast_33() const;
  ::epoch::L2Summary* _internal_mutable_bcast_33();
  public:
  void unsafe_arena_set_allocated_bcast_33(
      ::epoch::L2Summary* bcast_33);
  ::epoch::L2Summary* unsafe_arena_release_bcast_33();

  // .epoch.L2Summary bcast_ff = 4;
  bool has_bcast_ff() const;
  private:
  bool _internal_has_bcast_ff() const;
  public:
  void clear_bcast_ff();
  const ::epoch::L2Summary& bcast_ff() const;
  ::epoch::L2Summary* release_bcast_ff();
  ::epoch::L2Summary* mutable_bcast_ff();
  void set_allocated_bcast_ff(::epoch::L2Summary* bcast_ff);
  private:
  const ::epoch::L2Summary& _internal_bcast_ff() const;
  ::epoch::L2Summary* _internal_mutable_bcast_ff();
  public:
  void unsafe_arena_set_allocated_bcast_ff(
      ::epoch::L2Summary* bcast_ff);
  ::epoch::L2Summary* unsafe_arena_release_bcast_ff();

  // .epoch.L2Summary bcast_01 = 5;
  bool has_bcast_01() const;
  private:
  bool _internal_has_bcast_01() const;
  public:
  void clear_bcast_01();
  const ::epoch::L2Summary& bcast_01() const;
  ::epoch::L2Summary* release_bcast_01();
  ::epoch::L2Summary* mutable_bcast_01();
  void set_allocated_bcast_01(::epoch::L2Summary* bcast_01);
  private:
  const ::epoch::L2Summary& _internal_bcast_01() const;
  ::epoch::L2Summary* _internal_mutable_bcast_01();
  public:
  void unsafe_arena_set_allocated_bcast_01(
      ::epoch::L2Summary* bcast_01);
  ::epoch::L2Summary* unsafe_arena_release_bcast_01();

  // .epoch.L2Summary bcast_XX = 6;
  bool has_bcast_xx() const;
  private:
  bool _internal_has_bcast_xx() const;
  public:
  void clear_bcast_xx();
  const ::epoch::L2Summary& bcast_xx() const;
  ::epoch::L2Summary* release_bcast_xx();
  ::epoch::L2Summary* mutable_bcast_xx();
  void set_allocated_bcast_xx(::epoch::L2Summary* bcast_xx);
  private:
  const ::epoch::L2Summary& _internal_bcast_xx() const;
  ::epoch::L2Summary* _internal_mutable_bcast_xx();
  public:
  void unsafe_arena_set_allocated_bcast_xx(
      ::epoch::L2Summary* bcast_xx);
  ::epoch::L2Summary* unsafe_arena_release_bcast_xx();

  // fixed64 mac_src = 1;
  void clear_mac_src();
  ::PROTOBUF_NAMESPACE_ID::uint64 mac_src() const;
  void set_mac_src(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mac_src() const;
  void _internal_set_mac_src(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:epoch.DeviceComm)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::L2Summary > tx_summary_;
  ::epoch::L2Summary* bcast_33_;
  ::epoch::L2Summary* bcast_ff_;
  ::epoch::L2Summary* bcast_01_;
  ::epoch::L2Summary* bcast_xx_;
  ::PROTOBUF_NAMESPACE_ID::uint64 mac_src_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_epoch_2eproto;
};
// -------------------------------------------------------------------

class AddrAssoc PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:epoch.AddrAssoc) */ {
 public:
  inline AddrAssoc() : AddrAssoc(nullptr) {};
  virtual ~AddrAssoc();

  AddrAssoc(const AddrAssoc& from);
  AddrAssoc(AddrAssoc&& from) noexcept
    : AddrAssoc() {
    *this = ::std::move(from);
  }

  inline AddrAssoc& operator=(const AddrAssoc& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddrAssoc& operator=(AddrAssoc&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const AddrAssoc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddrAssoc* internal_default_instance() {
    return reinterpret_cast<const AddrAssoc*>(
               &_AddrAssoc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AddrAssoc& a, AddrAssoc& b) {
    a.Swap(&b);
  }
  inline void Swap(AddrAssoc* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddrAssoc* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AddrAssoc* New() const final {
    return CreateMaybeMessage<AddrAssoc>(nullptr);
  }

  AddrAssoc* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AddrAssoc>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const AddrAssoc& from);
  void MergeFrom(const AddrAssoc& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddrAssoc* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "epoch.AddrAssoc";
  }
  protected:
  explicit AddrAssoc(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMacSrcFieldNumber = 1,
    kIpv4FieldNumber = 2,
  };
  // fixed64 mac_src = 1;
  void clear_mac_src();
  ::PROTOBUF_NAMESPACE_ID::uint64 mac_src() const;
  void set_mac_src(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mac_src() const;
  void _internal_set_mac_src(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed32 ipv4 = 2;
  void clear_ipv4();
  ::PROTOBUF_NAMESPACE_ID::uint32 ipv4() const;
  void set_ipv4(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ipv4() const;
  void _internal_set_ipv4(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:epoch.AddrAssoc)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 mac_src_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ipv4_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_epoch_2eproto;
};
// -------------------------------------------------------------------

class ArpAssoc PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:epoch.ArpAssoc) */ {
 public:
  inline ArpAssoc() : ArpAssoc(nullptr) {};
  virtual ~ArpAssoc();

  ArpAssoc(const ArpAssoc& from);
  ArpAssoc(ArpAssoc&& from) noexcept
    : ArpAssoc() {
    *this = ::std::move(from);
  }

  inline ArpAssoc& operator=(const ArpAssoc& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArpAssoc& operator=(ArpAssoc&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ArpAssoc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArpAssoc* internal_default_instance() {
    return reinterpret_cast<const ArpAssoc*>(
               &_ArpAssoc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ArpAssoc& a, ArpAssoc& b) {
    a.Swap(&b);
  }
  inline void Swap(ArpAssoc* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArpAssoc* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ArpAssoc* New() const final {
    return CreateMaybeMessage<ArpAssoc>(nullptr);
  }

  ArpAssoc* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ArpAssoc>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ArpAssoc& from);
  void MergeFrom(const ArpAssoc& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ArpAssoc* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "epoch.ArpAssoc";
  }
  protected:
  explicit ArpAssoc(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTableRowFieldNumber = 2,
    kMacSrcFieldNumber = 1,
  };
  // repeated .epoch.AddrAssoc table_row = 2;
  int table_row_size() const;
  private:
  int _internal_table_row_size() const;
  public:
  void clear_table_row();
  ::epoch::AddrAssoc* mutable_table_row(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::AddrAssoc >*
      mutable_table_row();
  private:
  const ::epoch::AddrAssoc& _internal_table_row(int index) const;
  ::epoch::AddrAssoc* _internal_add_table_row();
  public:
  const ::epoch::AddrAssoc& table_row(int index) const;
  ::epoch::AddrAssoc* add_table_row();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::AddrAssoc >&
      table_row() const;

  // fixed64 mac_src = 1;
  void clear_mac_src();
  ::PROTOBUF_NAMESPACE_ID::uint64 mac_src() const;
  void set_mac_src(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mac_src() const;
  void _internal_set_mac_src(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:epoch.ArpAssoc)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::AddrAssoc > table_row_;
  ::PROTOBUF_NAMESPACE_ID::uint64 mac_src_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_epoch_2eproto;
};
// -------------------------------------------------------------------

class EpochStep PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:epoch.EpochStep) */ {
 public:
  inline EpochStep() : EpochStep(nullptr) {};
  virtual ~EpochStep();

  EpochStep(const EpochStep& from);
  EpochStep(EpochStep&& from) noexcept
    : EpochStep() {
    *this = ::std::move(from);
  }

  inline EpochStep& operator=(const EpochStep& from) {
    CopyFrom(from);
    return *this;
  }
  inline EpochStep& operator=(EpochStep&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const EpochStep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EpochStep* internal_default_instance() {
    return reinterpret_cast<const EpochStep*>(
               &_EpochStep_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(EpochStep& a, EpochStep& b) {
    a.Swap(&b);
  }
  inline void Swap(EpochStep* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EpochStep* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EpochStep* New() const final {
    return CreateMaybeMessage<EpochStep>(nullptr);
  }

  EpochStep* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EpochStep>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const EpochStep& from);
  void MergeFrom(const EpochStep& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EpochStep* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "epoch.EpochStep";
  }
  protected:
  explicit EpochStep(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEnterL2DevicesFieldNumber = 1,
    kL2DevCommFieldNumber = 2,
    kEnterL2Ipv4AddrSrcFieldNumber = 3,
    kEnterArpTableFieldNumber = 4,
  };
  // repeated fixed64 enter_l2devices = 1;
  int enter_l2devices_size() const;
  private:
  int _internal_enter_l2devices_size() const;
  public:
  void clear_enter_l2devices();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_enter_l2devices(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_enter_l2devices() const;
  void _internal_add_enter_l2devices(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_enter_l2devices();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 enter_l2devices(int index) const;
  void set_enter_l2devices(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_enter_l2devices(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      enter_l2devices() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_enter_l2devices();

  // repeated .epoch.DeviceComm l2_dev_comm = 2;
  int l2_dev_comm_size() const;
  private:
  int _internal_l2_dev_comm_size() const;
  public:
  void clear_l2_dev_comm();
  ::epoch::DeviceComm* mutable_l2_dev_comm(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::DeviceComm >*
      mutable_l2_dev_comm();
  private:
  const ::epoch::DeviceComm& _internal_l2_dev_comm(int index) const;
  ::epoch::DeviceComm* _internal_add_l2_dev_comm();
  public:
  const ::epoch::DeviceComm& l2_dev_comm(int index) const;
  ::epoch::DeviceComm* add_l2_dev_comm();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::DeviceComm >&
      l2_dev_comm() const;

  // repeated .epoch.AddrAssoc enter_l2_ipv4_addr_src = 3;
  int enter_l2_ipv4_addr_src_size() const;
  private:
  int _internal_enter_l2_ipv4_addr_src_size() const;
  public:
  void clear_enter_l2_ipv4_addr_src();
  ::epoch::AddrAssoc* mutable_enter_l2_ipv4_addr_src(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::AddrAssoc >*
      mutable_enter_l2_ipv4_addr_src();
  private:
  const ::epoch::AddrAssoc& _internal_enter_l2_ipv4_addr_src(int index) const;
  ::epoch::AddrAssoc* _internal_add_enter_l2_ipv4_addr_src();
  public:
  const ::epoch::AddrAssoc& enter_l2_ipv4_addr_src(int index) const;
  ::epoch::AddrAssoc* add_enter_l2_ipv4_addr_src();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::AddrAssoc >&
      enter_l2_ipv4_addr_src() const;

  // repeated .epoch.ArpAssoc enter_arp_table = 4;
  int enter_arp_table_size() const;
  private:
  int _internal_enter_arp_table_size() const;
  public:
  void clear_enter_arp_table();
  ::epoch::ArpAssoc* mutable_enter_arp_table(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::ArpAssoc >*
      mutable_enter_arp_table();
  private:
  const ::epoch::ArpAssoc& _internal_enter_arp_table(int index) const;
  ::epoch::ArpAssoc* _internal_add_enter_arp_table();
  public:
  const ::epoch::ArpAssoc& enter_arp_table(int index) const;
  ::epoch::ArpAssoc* add_enter_arp_table();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::ArpAssoc >&
      enter_arp_table() const;

  // @@protoc_insertion_point(class_scope:epoch.EpochStep)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > enter_l2devices_;
  mutable std::atomic<int> _enter_l2devices_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::DeviceComm > l2_dev_comm_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::AddrAssoc > enter_l2_ipv4_addr_src_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::ArpAssoc > enter_arp_table_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_epoch_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// L2Summary

// fixed64 mac_dst = 1;
inline void L2Summary::clear_mac_dst() {
  mac_dst_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 L2Summary::_internal_mac_dst() const {
  return mac_dst_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 L2Summary::mac_dst() const {
  // @@protoc_insertion_point(field_get:epoch.L2Summary.mac_dst)
  return _internal_mac_dst();
}
inline void L2Summary::_internal_set_mac_dst(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  mac_dst_ = value;
}
inline void L2Summary::set_mac_dst(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_mac_dst(value);
  // @@protoc_insertion_point(field_set:epoch.L2Summary.mac_dst)
}

// uint32 ipv4 = 2;
inline void L2Summary::clear_ipv4() {
  ipv4_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 L2Summary::_internal_ipv4() const {
  return ipv4_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 L2Summary::ipv4() const {
  // @@protoc_insertion_point(field_get:epoch.L2Summary.ipv4)
  return _internal_ipv4();
}
inline void L2Summary::_internal_set_ipv4(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ipv4_ = value;
}
inline void L2Summary::set_ipv4(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ipv4(value);
  // @@protoc_insertion_point(field_set:epoch.L2Summary.ipv4)
}

// uint32 ipv6 = 3;
inline void L2Summary::clear_ipv6() {
  ipv6_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 L2Summary::_internal_ipv6() const {
  return ipv6_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 L2Summary::ipv6() const {
  // @@protoc_insertion_point(field_get:epoch.L2Summary.ipv6)
  return _internal_ipv6();
}
inline void L2Summary::_internal_set_ipv6(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ipv6_ = value;
}
inline void L2Summary::set_ipv6(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ipv6(value);
  // @@protoc_insertion_point(field_set:epoch.L2Summary.ipv6)
}

// uint32 arp = 4;
inline void L2Summary::clear_arp() {
  arp_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 L2Summary::_internal_arp() const {
  return arp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 L2Summary::arp() const {
  // @@protoc_insertion_point(field_get:epoch.L2Summary.arp)
  return _internal_arp();
}
inline void L2Summary::_internal_set_arp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  arp_ = value;
}
inline void L2Summary::set_arp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_arp(value);
  // @@protoc_insertion_point(field_set:epoch.L2Summary.arp)
}

// uint32 unknown = 5;
inline void L2Summary::clear_unknown() {
  unknown_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 L2Summary::_internal_unknown() const {
  return unknown_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 L2Summary::unknown() const {
  // @@protoc_insertion_point(field_get:epoch.L2Summary.unknown)
  return _internal_unknown();
}
inline void L2Summary::_internal_set_unknown(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  unknown_ = value;
}
inline void L2Summary::set_unknown(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_unknown(value);
  // @@protoc_insertion_point(field_set:epoch.L2Summary.unknown)
}

// -------------------------------------------------------------------

// DeviceComm

// fixed64 mac_src = 1;
inline void DeviceComm::clear_mac_src() {
  mac_src_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DeviceComm::_internal_mac_src() const {
  return mac_src_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DeviceComm::mac_src() const {
  // @@protoc_insertion_point(field_get:epoch.DeviceComm.mac_src)
  return _internal_mac_src();
}
inline void DeviceComm::_internal_set_mac_src(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  mac_src_ = value;
}
inline void DeviceComm::set_mac_src(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_mac_src(value);
  // @@protoc_insertion_point(field_set:epoch.DeviceComm.mac_src)
}

// repeated .epoch.L2Summary tx_summary = 2;
inline int DeviceComm::_internal_tx_summary_size() const {
  return tx_summary_.size();
}
inline int DeviceComm::tx_summary_size() const {
  return _internal_tx_summary_size();
}
inline void DeviceComm::clear_tx_summary() {
  tx_summary_.Clear();
}
inline ::epoch::L2Summary* DeviceComm::mutable_tx_summary(int index) {
  // @@protoc_insertion_point(field_mutable:epoch.DeviceComm.tx_summary)
  return tx_summary_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::L2Summary >*
DeviceComm::mutable_tx_summary() {
  // @@protoc_insertion_point(field_mutable_list:epoch.DeviceComm.tx_summary)
  return &tx_summary_;
}
inline const ::epoch::L2Summary& DeviceComm::_internal_tx_summary(int index) const {
  return tx_summary_.Get(index);
}
inline const ::epoch::L2Summary& DeviceComm::tx_summary(int index) const {
  // @@protoc_insertion_point(field_get:epoch.DeviceComm.tx_summary)
  return _internal_tx_summary(index);
}
inline ::epoch::L2Summary* DeviceComm::_internal_add_tx_summary() {
  return tx_summary_.Add();
}
inline ::epoch::L2Summary* DeviceComm::add_tx_summary() {
  // @@protoc_insertion_point(field_add:epoch.DeviceComm.tx_summary)
  return _internal_add_tx_summary();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::L2Summary >&
DeviceComm::tx_summary() const {
  // @@protoc_insertion_point(field_list:epoch.DeviceComm.tx_summary)
  return tx_summary_;
}

// .epoch.L2Summary bcast_33 = 3;
inline bool DeviceComm::_internal_has_bcast_33() const {
  return this != internal_default_instance() && bcast_33_ != nullptr;
}
inline bool DeviceComm::has_bcast_33() const {
  return _internal_has_bcast_33();
}
inline void DeviceComm::clear_bcast_33() {
  if (GetArena() == nullptr && bcast_33_ != nullptr) {
    delete bcast_33_;
  }
  bcast_33_ = nullptr;
}
inline const ::epoch::L2Summary& DeviceComm::_internal_bcast_33() const {
  const ::epoch::L2Summary* p = bcast_33_;
  return p != nullptr ? *p : *reinterpret_cast<const ::epoch::L2Summary*>(
      &::epoch::_L2Summary_default_instance_);
}
inline const ::epoch::L2Summary& DeviceComm::bcast_33() const {
  // @@protoc_insertion_point(field_get:epoch.DeviceComm.bcast_33)
  return _internal_bcast_33();
}
inline void DeviceComm::unsafe_arena_set_allocated_bcast_33(
    ::epoch::L2Summary* bcast_33) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bcast_33_);
  }
  bcast_33_ = bcast_33;
  if (bcast_33) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:epoch.DeviceComm.bcast_33)
}
inline ::epoch::L2Summary* DeviceComm::release_bcast_33() {
  auto temp = unsafe_arena_release_bcast_33();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::epoch::L2Summary* DeviceComm::unsafe_arena_release_bcast_33() {
  // @@protoc_insertion_point(field_release:epoch.DeviceComm.bcast_33)
  
  ::epoch::L2Summary* temp = bcast_33_;
  bcast_33_ = nullptr;
  return temp;
}
inline ::epoch::L2Summary* DeviceComm::_internal_mutable_bcast_33() {
  
  if (bcast_33_ == nullptr) {
    auto* p = CreateMaybeMessage<::epoch::L2Summary>(GetArena());
    bcast_33_ = p;
  }
  return bcast_33_;
}
inline ::epoch::L2Summary* DeviceComm::mutable_bcast_33() {
  // @@protoc_insertion_point(field_mutable:epoch.DeviceComm.bcast_33)
  return _internal_mutable_bcast_33();
}
inline void DeviceComm::set_allocated_bcast_33(::epoch::L2Summary* bcast_33) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete bcast_33_;
  }
  if (bcast_33) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(bcast_33);
    if (message_arena != submessage_arena) {
      bcast_33 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bcast_33, submessage_arena);
    }
    
  } else {
    
  }
  bcast_33_ = bcast_33;
  // @@protoc_insertion_point(field_set_allocated:epoch.DeviceComm.bcast_33)
}

// .epoch.L2Summary bcast_ff = 4;
inline bool DeviceComm::_internal_has_bcast_ff() const {
  return this != internal_default_instance() && bcast_ff_ != nullptr;
}
inline bool DeviceComm::has_bcast_ff() const {
  return _internal_has_bcast_ff();
}
inline void DeviceComm::clear_bcast_ff() {
  if (GetArena() == nullptr && bcast_ff_ != nullptr) {
    delete bcast_ff_;
  }
  bcast_ff_ = nullptr;
}
inline const ::epoch::L2Summary& DeviceComm::_internal_bcast_ff() const {
  const ::epoch::L2Summary* p = bcast_ff_;
  return p != nullptr ? *p : *reinterpret_cast<const ::epoch::L2Summary*>(
      &::epoch::_L2Summary_default_instance_);
}
inline const ::epoch::L2Summary& DeviceComm::bcast_ff() const {
  // @@protoc_insertion_point(field_get:epoch.DeviceComm.bcast_ff)
  return _internal_bcast_ff();
}
inline void DeviceComm::unsafe_arena_set_allocated_bcast_ff(
    ::epoch::L2Summary* bcast_ff) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bcast_ff_);
  }
  bcast_ff_ = bcast_ff;
  if (bcast_ff) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:epoch.DeviceComm.bcast_ff)
}
inline ::epoch::L2Summary* DeviceComm::release_bcast_ff() {
  auto temp = unsafe_arena_release_bcast_ff();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::epoch::L2Summary* DeviceComm::unsafe_arena_release_bcast_ff() {
  // @@protoc_insertion_point(field_release:epoch.DeviceComm.bcast_ff)
  
  ::epoch::L2Summary* temp = bcast_ff_;
  bcast_ff_ = nullptr;
  return temp;
}
inline ::epoch::L2Summary* DeviceComm::_internal_mutable_bcast_ff() {
  
  if (bcast_ff_ == nullptr) {
    auto* p = CreateMaybeMessage<::epoch::L2Summary>(GetArena());
    bcast_ff_ = p;
  }
  return bcast_ff_;
}
inline ::epoch::L2Summary* DeviceComm::mutable_bcast_ff() {
  // @@protoc_insertion_point(field_mutable:epoch.DeviceComm.bcast_ff)
  return _internal_mutable_bcast_ff();
}
inline void DeviceComm::set_allocated_bcast_ff(::epoch::L2Summary* bcast_ff) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete bcast_ff_;
  }
  if (bcast_ff) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(bcast_ff);
    if (message_arena != submessage_arena) {
      bcast_ff = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bcast_ff, submessage_arena);
    }
    
  } else {
    
  }
  bcast_ff_ = bcast_ff;
  // @@protoc_insertion_point(field_set_allocated:epoch.DeviceComm.bcast_ff)
}

// .epoch.L2Summary bcast_01 = 5;
inline bool DeviceComm::_internal_has_bcast_01() const {
  return this != internal_default_instance() && bcast_01_ != nullptr;
}
inline bool DeviceComm::has_bcast_01() const {
  return _internal_has_bcast_01();
}
inline void DeviceComm::clear_bcast_01() {
  if (GetArena() == nullptr && bcast_01_ != nullptr) {
    delete bcast_01_;
  }
  bcast_01_ = nullptr;
}
inline const ::epoch::L2Summary& DeviceComm::_internal_bcast_01() const {
  const ::epoch::L2Summary* p = bcast_01_;
  return p != nullptr ? *p : *reinterpret_cast<const ::epoch::L2Summary*>(
      &::epoch::_L2Summary_default_instance_);
}
inline const ::epoch::L2Summary& DeviceComm::bcast_01() const {
  // @@protoc_insertion_point(field_get:epoch.DeviceComm.bcast_01)
  return _internal_bcast_01();
}
inline void DeviceComm::unsafe_arena_set_allocated_bcast_01(
    ::epoch::L2Summary* bcast_01) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bcast_01_);
  }
  bcast_01_ = bcast_01;
  if (bcast_01) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:epoch.DeviceComm.bcast_01)
}
inline ::epoch::L2Summary* DeviceComm::release_bcast_01() {
  auto temp = unsafe_arena_release_bcast_01();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::epoch::L2Summary* DeviceComm::unsafe_arena_release_bcast_01() {
  // @@protoc_insertion_point(field_release:epoch.DeviceComm.bcast_01)
  
  ::epoch::L2Summary* temp = bcast_01_;
  bcast_01_ = nullptr;
  return temp;
}
inline ::epoch::L2Summary* DeviceComm::_internal_mutable_bcast_01() {
  
  if (bcast_01_ == nullptr) {
    auto* p = CreateMaybeMessage<::epoch::L2Summary>(GetArena());
    bcast_01_ = p;
  }
  return bcast_01_;
}
inline ::epoch::L2Summary* DeviceComm::mutable_bcast_01() {
  // @@protoc_insertion_point(field_mutable:epoch.DeviceComm.bcast_01)
  return _internal_mutable_bcast_01();
}
inline void DeviceComm::set_allocated_bcast_01(::epoch::L2Summary* bcast_01) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete bcast_01_;
  }
  if (bcast_01) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(bcast_01);
    if (message_arena != submessage_arena) {
      bcast_01 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bcast_01, submessage_arena);
    }
    
  } else {
    
  }
  bcast_01_ = bcast_01;
  // @@protoc_insertion_point(field_set_allocated:epoch.DeviceComm.bcast_01)
}

// .epoch.L2Summary bcast_XX = 6;
inline bool DeviceComm::_internal_has_bcast_xx() const {
  return this != internal_default_instance() && bcast_xx_ != nullptr;
}
inline bool DeviceComm::has_bcast_xx() const {
  return _internal_has_bcast_xx();
}
inline void DeviceComm::clear_bcast_xx() {
  if (GetArena() == nullptr && bcast_xx_ != nullptr) {
    delete bcast_xx_;
  }
  bcast_xx_ = nullptr;
}
inline const ::epoch::L2Summary& DeviceComm::_internal_bcast_xx() const {
  const ::epoch::L2Summary* p = bcast_xx_;
  return p != nullptr ? *p : *reinterpret_cast<const ::epoch::L2Summary*>(
      &::epoch::_L2Summary_default_instance_);
}
inline const ::epoch::L2Summary& DeviceComm::bcast_xx() const {
  // @@protoc_insertion_point(field_get:epoch.DeviceComm.bcast_XX)
  return _internal_bcast_xx();
}
inline void DeviceComm::unsafe_arena_set_allocated_bcast_xx(
    ::epoch::L2Summary* bcast_xx) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bcast_xx_);
  }
  bcast_xx_ = bcast_xx;
  if (bcast_xx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:epoch.DeviceComm.bcast_XX)
}
inline ::epoch::L2Summary* DeviceComm::release_bcast_xx() {
  auto temp = unsafe_arena_release_bcast_xx();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::epoch::L2Summary* DeviceComm::unsafe_arena_release_bcast_xx() {
  // @@protoc_insertion_point(field_release:epoch.DeviceComm.bcast_XX)
  
  ::epoch::L2Summary* temp = bcast_xx_;
  bcast_xx_ = nullptr;
  return temp;
}
inline ::epoch::L2Summary* DeviceComm::_internal_mutable_bcast_xx() {
  
  if (bcast_xx_ == nullptr) {
    auto* p = CreateMaybeMessage<::epoch::L2Summary>(GetArena());
    bcast_xx_ = p;
  }
  return bcast_xx_;
}
inline ::epoch::L2Summary* DeviceComm::mutable_bcast_xx() {
  // @@protoc_insertion_point(field_mutable:epoch.DeviceComm.bcast_XX)
  return _internal_mutable_bcast_xx();
}
inline void DeviceComm::set_allocated_bcast_xx(::epoch::L2Summary* bcast_xx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete bcast_xx_;
  }
  if (bcast_xx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(bcast_xx);
    if (message_arena != submessage_arena) {
      bcast_xx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bcast_xx, submessage_arena);
    }
    
  } else {
    
  }
  bcast_xx_ = bcast_xx;
  // @@protoc_insertion_point(field_set_allocated:epoch.DeviceComm.bcast_XX)
}

// -------------------------------------------------------------------

// AddrAssoc

// fixed64 mac_src = 1;
inline void AddrAssoc::clear_mac_src() {
  mac_src_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddrAssoc::_internal_mac_src() const {
  return mac_src_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddrAssoc::mac_src() const {
  // @@protoc_insertion_point(field_get:epoch.AddrAssoc.mac_src)
  return _internal_mac_src();
}
inline void AddrAssoc::_internal_set_mac_src(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  mac_src_ = value;
}
inline void AddrAssoc::set_mac_src(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_mac_src(value);
  // @@protoc_insertion_point(field_set:epoch.AddrAssoc.mac_src)
}

// fixed32 ipv4 = 2;
inline void AddrAssoc::clear_ipv4() {
  ipv4_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AddrAssoc::_internal_ipv4() const {
  return ipv4_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AddrAssoc::ipv4() const {
  // @@protoc_insertion_point(field_get:epoch.AddrAssoc.ipv4)
  return _internal_ipv4();
}
inline void AddrAssoc::_internal_set_ipv4(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ipv4_ = value;
}
inline void AddrAssoc::set_ipv4(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ipv4(value);
  // @@protoc_insertion_point(field_set:epoch.AddrAssoc.ipv4)
}

// -------------------------------------------------------------------

// ArpAssoc

// fixed64 mac_src = 1;
inline void ArpAssoc::clear_mac_src() {
  mac_src_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArpAssoc::_internal_mac_src() const {
  return mac_src_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArpAssoc::mac_src() const {
  // @@protoc_insertion_point(field_get:epoch.ArpAssoc.mac_src)
  return _internal_mac_src();
}
inline void ArpAssoc::_internal_set_mac_src(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  mac_src_ = value;
}
inline void ArpAssoc::set_mac_src(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_mac_src(value);
  // @@protoc_insertion_point(field_set:epoch.ArpAssoc.mac_src)
}

// repeated .epoch.AddrAssoc table_row = 2;
inline int ArpAssoc::_internal_table_row_size() const {
  return table_row_.size();
}
inline int ArpAssoc::table_row_size() const {
  return _internal_table_row_size();
}
inline void ArpAssoc::clear_table_row() {
  table_row_.Clear();
}
inline ::epoch::AddrAssoc* ArpAssoc::mutable_table_row(int index) {
  // @@protoc_insertion_point(field_mutable:epoch.ArpAssoc.table_row)
  return table_row_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::AddrAssoc >*
ArpAssoc::mutable_table_row() {
  // @@protoc_insertion_point(field_mutable_list:epoch.ArpAssoc.table_row)
  return &table_row_;
}
inline const ::epoch::AddrAssoc& ArpAssoc::_internal_table_row(int index) const {
  return table_row_.Get(index);
}
inline const ::epoch::AddrAssoc& ArpAssoc::table_row(int index) const {
  // @@protoc_insertion_point(field_get:epoch.ArpAssoc.table_row)
  return _internal_table_row(index);
}
inline ::epoch::AddrAssoc* ArpAssoc::_internal_add_table_row() {
  return table_row_.Add();
}
inline ::epoch::AddrAssoc* ArpAssoc::add_table_row() {
  // @@protoc_insertion_point(field_add:epoch.ArpAssoc.table_row)
  return _internal_add_table_row();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::AddrAssoc >&
ArpAssoc::table_row() const {
  // @@protoc_insertion_point(field_list:epoch.ArpAssoc.table_row)
  return table_row_;
}

// -------------------------------------------------------------------

// EpochStep

// repeated fixed64 enter_l2devices = 1;
inline int EpochStep::_internal_enter_l2devices_size() const {
  return enter_l2devices_.size();
}
inline int EpochStep::enter_l2devices_size() const {
  return _internal_enter_l2devices_size();
}
inline void EpochStep::clear_enter_l2devices() {
  enter_l2devices_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 EpochStep::_internal_enter_l2devices(int index) const {
  return enter_l2devices_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 EpochStep::enter_l2devices(int index) const {
  // @@protoc_insertion_point(field_get:epoch.EpochStep.enter_l2devices)
  return _internal_enter_l2devices(index);
}
inline void EpochStep::set_enter_l2devices(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  enter_l2devices_.Set(index, value);
  // @@protoc_insertion_point(field_set:epoch.EpochStep.enter_l2devices)
}
inline void EpochStep::_internal_add_enter_l2devices(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  enter_l2devices_.Add(value);
}
inline void EpochStep::add_enter_l2devices(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_enter_l2devices(value);
  // @@protoc_insertion_point(field_add:epoch.EpochStep.enter_l2devices)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
EpochStep::_internal_enter_l2devices() const {
  return enter_l2devices_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
EpochStep::enter_l2devices() const {
  // @@protoc_insertion_point(field_list:epoch.EpochStep.enter_l2devices)
  return _internal_enter_l2devices();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
EpochStep::_internal_mutable_enter_l2devices() {
  return &enter_l2devices_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
EpochStep::mutable_enter_l2devices() {
  // @@protoc_insertion_point(field_mutable_list:epoch.EpochStep.enter_l2devices)
  return _internal_mutable_enter_l2devices();
}

// repeated .epoch.DeviceComm l2_dev_comm = 2;
inline int EpochStep::_internal_l2_dev_comm_size() const {
  return l2_dev_comm_.size();
}
inline int EpochStep::l2_dev_comm_size() const {
  return _internal_l2_dev_comm_size();
}
inline void EpochStep::clear_l2_dev_comm() {
  l2_dev_comm_.Clear();
}
inline ::epoch::DeviceComm* EpochStep::mutable_l2_dev_comm(int index) {
  // @@protoc_insertion_point(field_mutable:epoch.EpochStep.l2_dev_comm)
  return l2_dev_comm_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::DeviceComm >*
EpochStep::mutable_l2_dev_comm() {
  // @@protoc_insertion_point(field_mutable_list:epoch.EpochStep.l2_dev_comm)
  return &l2_dev_comm_;
}
inline const ::epoch::DeviceComm& EpochStep::_internal_l2_dev_comm(int index) const {
  return l2_dev_comm_.Get(index);
}
inline const ::epoch::DeviceComm& EpochStep::l2_dev_comm(int index) const {
  // @@protoc_insertion_point(field_get:epoch.EpochStep.l2_dev_comm)
  return _internal_l2_dev_comm(index);
}
inline ::epoch::DeviceComm* EpochStep::_internal_add_l2_dev_comm() {
  return l2_dev_comm_.Add();
}
inline ::epoch::DeviceComm* EpochStep::add_l2_dev_comm() {
  // @@protoc_insertion_point(field_add:epoch.EpochStep.l2_dev_comm)
  return _internal_add_l2_dev_comm();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::DeviceComm >&
EpochStep::l2_dev_comm() const {
  // @@protoc_insertion_point(field_list:epoch.EpochStep.l2_dev_comm)
  return l2_dev_comm_;
}

// repeated .epoch.AddrAssoc enter_l2_ipv4_addr_src = 3;
inline int EpochStep::_internal_enter_l2_ipv4_addr_src_size() const {
  return enter_l2_ipv4_addr_src_.size();
}
inline int EpochStep::enter_l2_ipv4_addr_src_size() const {
  return _internal_enter_l2_ipv4_addr_src_size();
}
inline void EpochStep::clear_enter_l2_ipv4_addr_src() {
  enter_l2_ipv4_addr_src_.Clear();
}
inline ::epoch::AddrAssoc* EpochStep::mutable_enter_l2_ipv4_addr_src(int index) {
  // @@protoc_insertion_point(field_mutable:epoch.EpochStep.enter_l2_ipv4_addr_src)
  return enter_l2_ipv4_addr_src_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::AddrAssoc >*
EpochStep::mutable_enter_l2_ipv4_addr_src() {
  // @@protoc_insertion_point(field_mutable_list:epoch.EpochStep.enter_l2_ipv4_addr_src)
  return &enter_l2_ipv4_addr_src_;
}
inline const ::epoch::AddrAssoc& EpochStep::_internal_enter_l2_ipv4_addr_src(int index) const {
  return enter_l2_ipv4_addr_src_.Get(index);
}
inline const ::epoch::AddrAssoc& EpochStep::enter_l2_ipv4_addr_src(int index) const {
  // @@protoc_insertion_point(field_get:epoch.EpochStep.enter_l2_ipv4_addr_src)
  return _internal_enter_l2_ipv4_addr_src(index);
}
inline ::epoch::AddrAssoc* EpochStep::_internal_add_enter_l2_ipv4_addr_src() {
  return enter_l2_ipv4_addr_src_.Add();
}
inline ::epoch::AddrAssoc* EpochStep::add_enter_l2_ipv4_addr_src() {
  // @@protoc_insertion_point(field_add:epoch.EpochStep.enter_l2_ipv4_addr_src)
  return _internal_add_enter_l2_ipv4_addr_src();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::AddrAssoc >&
EpochStep::enter_l2_ipv4_addr_src() const {
  // @@protoc_insertion_point(field_list:epoch.EpochStep.enter_l2_ipv4_addr_src)
  return enter_l2_ipv4_addr_src_;
}

// repeated .epoch.ArpAssoc enter_arp_table = 4;
inline int EpochStep::_internal_enter_arp_table_size() const {
  return enter_arp_table_.size();
}
inline int EpochStep::enter_arp_table_size() const {
  return _internal_enter_arp_table_size();
}
inline void EpochStep::clear_enter_arp_table() {
  enter_arp_table_.Clear();
}
inline ::epoch::ArpAssoc* EpochStep::mutable_enter_arp_table(int index) {
  // @@protoc_insertion_point(field_mutable:epoch.EpochStep.enter_arp_table)
  return enter_arp_table_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::ArpAssoc >*
EpochStep::mutable_enter_arp_table() {
  // @@protoc_insertion_point(field_mutable_list:epoch.EpochStep.enter_arp_table)
  return &enter_arp_table_;
}
inline const ::epoch::ArpAssoc& EpochStep::_internal_enter_arp_table(int index) const {
  return enter_arp_table_.Get(index);
}
inline const ::epoch::ArpAssoc& EpochStep::enter_arp_table(int index) const {
  // @@protoc_insertion_point(field_get:epoch.EpochStep.enter_arp_table)
  return _internal_enter_arp_table(index);
}
inline ::epoch::ArpAssoc* EpochStep::_internal_add_enter_arp_table() {
  return enter_arp_table_.Add();
}
inline ::epoch::ArpAssoc* EpochStep::add_enter_arp_table() {
  // @@protoc_insertion_point(field_add:epoch.EpochStep.enter_arp_table)
  return _internal_add_enter_arp_table();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::epoch::ArpAssoc >&
EpochStep::enter_arp_table() const {
  // @@protoc_insertion_point(field_list:epoch.EpochStep.enter_arp_table)
  return enter_arp_table_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace epoch

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_epoch_2eproto
